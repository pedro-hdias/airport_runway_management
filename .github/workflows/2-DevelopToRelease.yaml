name: Automated Release Creation

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Garante que todas as tags e histórico completo sejam baixados

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Calculate Next Version
        id: next_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.LATEST_TAG }}"
          next_patch=$((patch + 1))
          next_version="$major.$minor.$next_patch"
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Create Release Branch from Main
        run: |
          # Certifique-se de que estamos na branch main
          git switch main
          git pull origin main  # Puxa as últimas mudanças de main
          
          # Cria uma nova branch de release
          git checkout -b release-${{ env.NEXT_VERSION }}
          
          # Sobe a nova branch para o repositório
          git push --set-upstream origin release-${{ env.NEXT_VERSION }}

      - name: Create Pull Request from Develop to Release
        run: |
          # Usar a GitHub CLI para criar o PR de develop para a nova release
          gh pr create --title "Release ${{ env.NEXT_VERSION }}" --base release-${{ env.NEXT_VERSION }} --head develop --body "Automated PR to merge develop into release-${{ env.NEXT_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
