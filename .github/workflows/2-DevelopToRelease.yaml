name: Automated Release Creation

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Garante que todas as tags e o histórico completo sejam baixados

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Calculate Next Version
        id: next_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.LATEST_TAG }}"
          next_patch=$((patch + 1))
          next_version="$major.$minor.$next_patch"
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Create Release Branch from Main
        run: |
          # Checkout main branch and create a new release branch from main
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout main  # Garante que estamos criando a release a partir de main
          git checkout -b release-${{ env.NEXT_VERSION }}
          git push origin release-v${{ env.NEXT_VERSION }}

      - name: Create Pull Request from Develop to Release
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: develop
          base: release-${{ env.NEXT_VERSION }}  # O merge será feito de develop para release
          title: "Merge Develop into Release ${{ env.NEXT_VERSION }}"
          body: |
            This is an automated PR to merge the changes from develop into the new release branch (release-${{ env.NEXT_VERSION }}).
          draft: false
