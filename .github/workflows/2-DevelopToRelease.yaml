name: Release Creation Workflow

on:
  pull_request:
    types: [closed]  # Aciona o workflow quando um PR Ã© fechado

jobs:
  create_release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'  # Apenas continua se o PR foi mergeado para develop
    runs-on: ubuntu-latest

    steps:
      # Checkout the develop branch
      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: develop

      # Get the latest tag
      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      # Get the label from the merged PR
      - name: Get PR Label
        id: get_label
        run: |
          label=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name')
          echo "PR_LABEL=$label" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Calculate the next version based on the label
      - name: Calculate Next Version
        id: calculate_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.LATEST_TAG#v }}"
          if [[ "${{ env.PR_LABEL }}" == "patch" ]]; then
            next_patch=$((patch + 1))
            next_version="$major.$minor.$next_patch"
          elif [[ "${{ env.PR_LABEL }}" == "minor" ]]; then
            next_minor=$((minor + 1))
            next_version="$major.$next_minor.0"
          elif [[ "${{ env.PR_LABEL }}" == "major" ]]; then
            next_major=$((major + 1))
            next_version="$next_major.0.0"
          fi
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      # Create or update the release
      - name: Create or Update Release
        run: |
          gh release create "v${{ env.NEXT_VERSION }}" --title "Release v${{ env.NEXT_VERSION }}" --notes "Automatic release based on merged PR"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
